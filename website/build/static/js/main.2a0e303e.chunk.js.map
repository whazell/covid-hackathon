{"version":3,"sources":["components/businessCard/index.js","components/HeaderTitle/index.js","util/useEffectAsync.js","api/company.js","components/businessDetail/index.js","components/HomePage/index.js","components/newFactForm/index.js","components/FactForm/index.js","App.js","serviceWorker.js","index.js"],"names":["Meta","BusinessCard","props","company","Facts","Name","Rating","className","cover","style","width","alt","src","Logo","actions","to","Id","title","padding","map","fact","Summary","href","Link","HeaderTitle","useEffectAsync","effect","dependencies","useEffect","URL","getCompanyDetail","id","axios","get","postCompanyFact","citation","summary","post","Citaion","postFact","BusinessDetail","useParams","useState","business","setBusiness","showFactForm","setShowFactForm","a","res","data","paddingLeft","marginLeft","onClick","itemLayout","dataSource","renderItem","item","Item","Citation","description","visible","onCancel","Search","postVariants","initial","scale","y","opacity","enter","transition","duration","ease","exit","HomePage","companies","setCompanies","showNewFactForm","setShowNewFactForm","textAlign","marginTop","marginBottom","placeholder","onSearch","value","console","log","enterButton","div","animate","variants","staggerChildren","whileHover","hover","TextArea","NewFactForm","onFinish","values","condition","message","success","footer","name","labelCol","span","wrapperCol","label","noStyle","rules","required","colon","marginRight","type","htmlType","FactForm","App","exact","path","children","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a0e303e.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Rate, Divider, Tooltip } from 'antd';\nimport {\n    BrowserRouter as Router,\n    Link\n  } from \"react-router-dom\";\nimport '../../App.less';\nimport './style.less';\n\nconst { Meta } = Card;\n\nconst BusinessCard = (props) => {\n    const {company} = props;\n    const { Facts, Name, Rating } = company;\n    return  <Card\n    className=\"business-card\"\n    cover={\n      <img\n      style={{\n        width:'100px'\n      }}\n        alt=\"example\"\n        src={company.Logo}\n      />\n    }\n    actions={[\n    ]}\n  >\n    <Link to={`/${company.Id}`}>\n    <Tooltip title=\"See Detailed Info\">\n      <span className=\"header-sub-title\">{Name} <span className=\"circle-rating\" ><span style={{padding:'5px'}}>{Rating}</span></span></span>\n      </Tooltip>\n      </Link>\n      {Facts && Facts.map(fact => <div>\n        <Divider/>\n            <span >{fact.Summary}  <a href={fact.Link}>Link</a></span>\n      </div>)}\n  </Card>\n}\n\nexport default BusinessCard;","import React from 'react';\nimport '../../App.less';\nconst HeaderTitle = () =>  (\n    <div>\n    <p className=\"header-text\">\n        Business For Good\n    </p>    \n    <p>\n        We believe that business should be doing good in the time like this\n    </p>\n    </div>\n\n)\n\nexport default HeaderTitle;","import { useEffect } from 'react';\n\n/**\n * Util func so you can do useEffectAsync(async () => { await stuff()})\n * Does not support an unsubscriber!\n * @param effect\n * @param dependencies\n */\nconst useEffectAsync = (\n  effect,\n  dependencies\n) => {\n  useEffect(() => {\n    effect();\n  }, dependencies);\n};\n\nexport default useEffectAsync;\n","import axios from 'axios';\n\nconst URL = 'http://34.68.214.180/';\n\nexport const getAllCompanies = () => axios.get(`${URL}api/v1/company`);\n\nexport const getCompanyDetail = (id) => axios.get(`${URL}api/v1/company/${id}`)\n\nexport const createCompany = () => axios.post(`${URL}api/v1/company`,)\n\nexport const postCompanyFact = (id, citation, summary) => axios.post(`${URL}/api/v1/company/${id}/propose`, {\n    Citaion: citation,\n    Summary: summary,\n    })\n    \n\nexport const postFact = (citation, summary) => axios.post(`${URL}api/v1/fact/propose `, {\nCitaion: citation,\nSummary: summary,\n})\n","import React, { useState } from 'react';\nimport {\n    useParams\n  } from \"react-router-dom\";\n  import { List } from 'antd';\n\nimport '../../App.less';\nimport './style.less';\nimport { useEffectAsync } from '../../util';\nimport { getCompanyDetail } from '../../api/company';\nimport { FactForm } from '../index';\nimport { Button } from 'antd';\nexport const BusinessDetail = () => {\n    let { id } = useParams();\n    const [business, setBusiness ] = useState({});\n    const [showFactForm, setShowFactForm] = useState(false);\n    useEffectAsync(async () => {\n    const res = await getCompanyDetail(id);\n    setBusiness(res.data);\n    }, [id])\n    return (\n        <div className=\"business-detail\">\n      <p className=\"business-detail-header-text\">\n           {business.Name}\n        </p>\n        <img style={{width:'150px'}} src={business.Logo}/>\n        <Button style={{paddingLeft:'20px', marginLeft:'20px'}} onClick={() => {\n      setShowFactForm(true)\n    }}>Submit New Fact</Button>\n        <List\n    itemLayout=\"horizontal\"\n    dataSource={business.Facts}\n    renderItem={item => (\n      <List.Item>\n        <List.Item.Meta\n          title={<a href={item.Citation}>Link</a>}\n          description={item.Summary}\n        />\n      </List.Item>\n    )}\n  />\n  <FactForm visible={showFactForm} id= {id} onCancel={() => {\n      setShowFactForm(false)\n  }}/>\n        </div>\n    )\n}\n\nexport default BusinessDetail;","import React, {useState} from 'react';\nimport { Input, Button} from 'antd';\nimport {BusinessCard, HeaderTitle, NewFactForm} from '../index'\nimport { useEffectAsync } from '../../util';\nimport { getAllCompanies } from '../../api/company';\nimport '../../App.less'\n\nimport { motion } from \"framer-motion\";\n\nconst { Search } = Input;\n\nconst postVariants = {\n  initial: { scale: 0.96, y: 30, opacity: 0 },\n  enter: { scale: 1, y: 0, opacity: 1, transition: { duration: 0.5, ease: [0.48, 0.15, 0.25, 0.96] } },\n  exit: {\n    scale: 0.6,\n    y: 100,\n    opacity: 0,\n    transition: { duration: 0.2, ease: [0.48, 0.15, 0.25, 0.96] }\n  }\n};\n\n\nconst HomePage = () => {\n  const [ companies, setCompanies] = useState([])\n  useEffectAsync(async () => {\n    const res = await getAllCompanies();\n    setCompanies(res.data);\n  }, [])\n  const [showNewFactForm, setShowNewFactForm ] = useState(false);\n  return(\n    <div>\n           <section style={{ textAlign: 'center', marginTop: 48, marginBottom: 60 }}>\n        <HeaderTitle/>\n    <Search style={{width:400}} placeholder=\"Search the company\" onSearch={value => console.log(value)} enterButton />  \n    <Button style={{paddingLeft:'20px', marginLeft:'20px'}} onClick={() => {\n      setShowNewFactForm(true)\n    }}>Submit New Fact</Button>\n  </section>  \n    <NewFactForm visible={showNewFactForm} onCancel={() => setShowNewFactForm(false)} />\n    <motion.div\n    initial=\"initial\"\n    animate=\"enter\"\n    exit=\"exit\"\n    variants={{ exit: { transition: { staggerChildren: 0.1 } } }}\n  >\n    <div className=\"company-grid\">\n    {companies.map(company =>\n      <motion.div variants={postVariants}>\n           <motion.div whileHover=\"hover\" variants={{ hover: { scale: 0.96 } }}>\n           <BusinessCard company={company}/>\n                  </motion.div>\n      </motion.div>\n      )}\n    </div> \n    </motion.div>\n    </div>\n   )\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { Form, Input, Select, Tooltip, Button, message, Modal} from 'antd';\nimport { postFact } from '../../api/company';\nimport './style.less'\nconst {TextArea } = Input;\nconst NewFactForm = (props) => {\n  const { visible, onCancel} = props;\n    const onFinish = async values => {\n       const { condition, summary } = values;\n       try {\n        await postFact(condition, summary);\n        message.success('Post new fact successfully');\n       }\n       catch(e) {\n         \n       }\n      };\n      return (\n          <div className=\"new-fact-form\">\n            <Modal visible={visible} \n            footer={null}\n            onCancel={() => onCancel()}\n            title=\"Submit New Fact\"\n            >\n            <Form name=\"complex-form\" onFinish={onFinish} labelCol={{ span: 4 }} wrapperCol={{ span: 16 }}>\n          <Form.Item label=\"Citation\">\n            <Form.Item\n              name=\"citation\"\n              noStyle\n              rules={[{ required: true, message: 'citation is required' }]}\n            >\n              <Input style={{ width: 160 }} placeholder=\"Please enter citation\" />\n            </Form.Item>\n          </Form.Item>\n\n          <Form.Item label=\"Summary\">\n            <Form.Item\n              name=\"summary\"\n              noStyle\n              rules={[{ required: true, message: 'summary is required' }]}\n            >\n              <TextArea style={{ width: 250 }} placeholder=\"Please enter summary\" />\n            </Form.Item>\n          </Form.Item>\n          \n          <Form.Item label=\" \" colon={false}>\n            <Button style={{marginRight: '20px', width: '120px'}} type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n            <Button onClick={() => onCancel()}style={{marginRight: '20px', width: '120px'}}>\n              Cancel\n            </Button>\n          </Form.Item>\n        </Form>\n            </Modal>\n          </div>\n      )\n}\n\nexport default NewFactForm;","import React from 'react';\nimport { Form, Input, Select, Tooltip, Button, message, Modal} from 'antd';\nimport { postCompanyFact } from '../../api/company';\nconst {TextArea } = Input;\nconst FactForm = (props) => {\n  const { visible, onCancel,id} = props;\n    const onFinish = async values => {\n       const { condition, summary } = values;\n       try {\n        await postCompanyFact(id, condition, summary);\n        message.success('Post new fact successfully');\n       }\n       catch(e) {\n         \n       }\n      };\n      return (\n          <div className=\"new-fact-form\">\n            <Modal visible={visible} \n            footer={null}\n            onCancel={() => onCancel()}\n            title=\"Submit New Fact\"\n            >\n            <Form name=\"complex-form\" onFinish={onFinish} labelCol={{ span: 4 }} wrapperCol={{ span: 16 }}>\n          <Form.Item label=\"Citation\">\n            <Form.Item\n              name=\"citation\"\n              noStyle\n              rules={[{ required: true, message: 'citation is required' }]}\n            >\n              <Input style={{ width: 160 }} placeholder=\"Please enter citation\" />\n            </Form.Item>\n          </Form.Item>\n\n          <Form.Item label=\"Summary\">\n            <Form.Item\n              name=\"summary\"\n              noStyle\n              rules={[{ required: true, message: 'summary is required' }]}\n            >\n              <TextArea style={{ width: 250 }} placeholder=\"Please enter summary\" />\n            </Form.Item>\n          </Form.Item>\n          \n          <Form.Item label=\" \" colon={false}>\n            <Button style={{marginRight: '20px', width: '120px'}} type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n            <Button onClick={() => onCancel()}style={{marginRight: '20px', width: '120px'}}>\n              Cancel\n            </Button>\n          </Form.Item>\n        </Form>\n            </Modal>\n          </div>\n      )\n}\n\nexport default FactForm;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\nimport {HomePage,  BusinessDetail} from './components'\nimport './App.less';\n\nconst App = () => {\n\n  return(\n  <Router>\n\n    <Switch>\n      <Route exact path=\"/\" children={<HomePage/>} />\n      <Route path=\"/:id\" children={<BusinessDetail />} />\n    </Switch>\n  </Router>)\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}